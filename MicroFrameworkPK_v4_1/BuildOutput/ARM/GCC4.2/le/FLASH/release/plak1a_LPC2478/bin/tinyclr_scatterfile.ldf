MEMORY
{
    LR_FLASH : ORIGIN = 0x80000000, LENGTH = 0x150000
    RELOC_RAM : ORIGIN = 0xA0000000, LENGTH = 0xA0300000-0xA0000000
    LR_IFLASH : ORIGIN = 0x00028000, LENGTH = 0x00055000
    LR_CONFIG : ORIGIN = 0x807D0000, LENGTH = 0x00010000
    LR_DAT : ORIGIN = 0x80150000, LENGTH = 0xA0000
    HEAP : ORIGIN = 0xA0300000, LENGTH = 0xFFFF8 + 1
    STACK : ORIGIN = 0xA0480000, LENGTH = 0x80000 + 1
}
ENTRY(EntryPoint)
SECTIONS
{
    ER_FLASH  :
    {
        * (i.EntryPoint)
        * (SectionForBootstrapOperations)
    }>LR_FLASH
    ER_IRAM 0x40000000 :
    {
        * (VectorsTrampolines)
    }AT>LR_FLASH
    ER_IRAM_TC 0x40000040 :
    {
        * (SectionForInternalSRAM)
        * (i.*LPC24XX_VIC*)
        * (.text.*LPC24XX_VIC*)
        * (.text.IRQ_Handler*)
        * (.text._ZN7LPC24XX3VICEv*)
        * (.text._ZNK12HAL_CALLBACK7ExecuteEv*)
        * (.text.*SystemState*)
        * (i.*LPC24XX_TIME*)
        * (.text.*LPC24XX_TIME*)
        * (.text.*LPC24XX_LCDC_Driver*)
        * (.text.*LPC24XX_EMAC*)
        * (.text.*CLR_DBG_Debugger*)
    }AT>LR_FLASH
    ER_RAM_RO  : ALIGN(0x10)
    {
        * (SectionForFlashOperations)
        * (i.*USART*)
        * (.text.*USART*)
        * (.text.*UART*)
        * (.text._Z10Events_Setj)
        * (.text.*Hal_Queue_UnknownSize*)
        * (.text.*Communication*)
        * (.text.*DebuggerPort*)
        * (.text.*CLR_RT_HeapBlock*)
        * (.text.*SOCK*)
        * (.text.*Sockets_Driver*)
        * (.text.*WP_Message*)
        * (i.*WP_Message*)
        * (.text.*WP_Controller*)
        * (i.*WP_Controller*)
        * (.text.*BlockStorage*)
        * (.text.*SmartPtr_IRQ*)
        * (.text.*LPC24XX_*)
        * (.text.IDelayLoop)
        * (.text._Z27HAL_Time_Sleep_MicroSecondsj)
        * (.text._Z44HAL_Time_Sleep_MicroSeconds_InterruptEnabledj)
        * (.text._Z23CPU_MicrosecondsToTicksj)
        * (.text._ZN21CLR_RT_HeapBlock_Node6UnlinkEv)
        * (.text._ZN20CLR_RT_DblLinkedList10LinkAtBackEP21CLR_RT_HeapBlock_Node)
        * (.text._ZN25CLR_RT_MethodDef_Instance19InitializeFromIndexERK22CLR_RT_MethodDef_Index)
        * (.text._Z18SUPPORT_ComputeCRCPKvij)
        * (.text._ZN24CLR_RT_FieldDef_Instance19InitializeFromIndexERK21CLR_RT_FieldDef_Index)
        * (.text._ZN16CLR_RT_HeapBlock21EnsureObjectReferenceERPS_)
        * (.text._ZN17CLR_RT_EventCache11Append_NodeEP16CLR_RT_HeapBlock)
        * (.text._ZN22CLR_RT_ExecutionEngine13IsTimeExpiredERKxRxb)
        * (.text._ZN17CLR_RT_StackFrame4PushEP13CLR_RT_ThreadRK25CLR_RT_MethodDef_Instancei)
        * (.text._ZN24CLR_RT_FieldDef_Instance12ResolveTokenEjP15CLR_RT_Assembly)
        * (.text._ZN23CLR_RT_TypeDef_Instance20InitializeFromMethodERK25CLR_RT_MethodDef_Instance)
        * (.text._ZN17CLR_RT_EventCache17FindVirtualMethodERK20CLR_RT_TypeDef_IndexRK22CLR_RT_MethodDef_IndexRS3_)
        * (.text._ZN25CLR_RT_MethodDef_Instance12ResolveTokenEjP15CLR_RT_Assembly)
        * (.text._ZN17CLR_RT_StackFrame3PopEv)
        * (.text._ZN22CLR_RT_ExecutionEngine19InitializeReferenceER16CLR_RT_HeapBlockR22CLR_RT_SignatureParser)
        * (.text._ZN23CLR_RT_TypeDef_Instance19InitializeFromIndexERK20CLR_RT_TypeDef_Index)
        * (.text._ZN22CLR_RT_SignatureParser19Initialize_FieldDefEP15CLR_RT_AssemblyPK19CLR_RECORD_FIELDDEF)
        * (.text._ZN13CLR_RT_Thread13Execute_InnerEv)
        * (.text._ZN22CLR_RT_ExecutionEngine16InitializeLocalsEP16CLR_RT_HeapBlockP15CLR_RT_AssemblyPK20CLR_RECORD_METHODDEF)
        * (.text._ZN16CLR_RT_HeapBlock30InitializeArrayReferenceDirectER22CLR_RT_HeapBlock_Arrayi)
        * (.text._ZN17CLR_RT_EventCache12Extract_NodeEjjj)
        * (.text._ZN21CLR_RT_TypeDescriptor26ExtractTypeIndexFromObjectERK16CLR_RT_HeapBlockR20CLR_RT_TypeDef_Index)
        * (.text._ZN17CLR_RT_EventCache18VirtualMethodTable17FindVirtualMethodERK20CLR_RT_TypeDef_IndexRK22CLR_RT_MethodDef_IndexRS4_)
        * (.text._ZN14CLR_GFX_Bitmap18CLR_TransparentBltEiiiiRKS_ii)
        * (.text._ZN22CLR_RT_SignatureParser19Initialize_FieldDefEP15CLR_RT_AssemblyPKh)
        * (.text._ZN11CLR_RT_Time10GetCurrentEv)
        * (.text._ZN22CLR_RT_ExecutionEngine27ExecutionConstraint_SuspendEv)
        * (.text._ZN16CLR_RT_HeapBlock16Convert_InternalE12CLR_DataType)
        * (.text._ZN22CLR_RT_ExecutionEngine11CheckTimersERx)
        * (.text._ZN22CLR_RT_ExecutionEngine26ExecutionConstraint_ResumeEv)
        * (.text._ZN11CLR_RT_Time11MonthToDaysEtt)
        * (.text._ZN22CLR_RT_SignatureParser7AdvanceERNS_7ElementE)
        * (.text._ZN16CLR_RT_HeapBlock24InitializeArrayReferenceERS_i)
        * (.text._ZN13CLR_RT_Thread10Execute_ILEP17CLR_RT_StackFrame)
        * (.text._ZN34Library_corlib_native_System_Array46System_Collections_IList_get_Item___OBJECT__I4ER17CLR_RT_StackFrame)
        * (.text._ZN11CLR_RT_Time11DaysToMonthEtt)
        * (.text._ZN16CLR_RT_HeapBlock12Relocate_ObjEv)
        * (.text._ZN23CLR_RT_TypeDef_Instance12ResolveTokenEjP15CLR_RT_Assembly)
        * (.text._ZN21CLR_RT_TypeDescriptor18InitializeFromTypeERK20CLR_RT_TypeDef_Index)
        * (.text._ZN23CLR_RT_GarbageCollector13Heap_RelocateEP16CLR_RT_HeapBlockj)
        * (.text._ZN29CLR_RT_HeapBlock_MemoryStream8ReadBitsERyj)
        * (.text._ZN29CLR_RT_HeapBlock_MemoryStream8ReadBitsERjj)
        * (.text._ZN22CLR_RT_ExecutionEngine19InitializeReferenceER16CLR_RT_HeapBlockPK19CLR_RECORD_FIELDDEFP15CLR_RT_Assembly)
        * (.text._ZN16CLR_RT_HeapBlock7PromoteEv)
        * (.text._ZN15CLR_RT_Assembly9GetStringEt)
        * (.text._ZN15CLR_RT_Assembly11FindTypeDefEPKcS1_R20CLR_RT_TypeDef_Index)
        * (.text._ZN15CLR_RT_Assembly11FindTypeDefEPKctR20CLR_RT_TypeDef_Index)
        * (.text._ZN11CLR_RT_Time18ElapsedYearsToDaysEt)
        * (.text._ZN23CLR_RT_GarbageCollector13Heap_RelocateEPPv)
        * (.text._ZN23CLR_RT_GarbageCollector13Heap_RelocateEv)
        * (.text._ZN11CLR_RT_Time17NumberOfLeapYearsEt)
        * (.text._ZN11CLR_RT_Time11DaysInMonthEtt)
        * (.text._ZN22CLR_RT_ExecutionEngine27ExtractHeapBlocksForObjectsEjjj)
        * (.text._ZN16CLR_RT_HeapBlock17LoadFromReferenceERS_)
        * (.text._ZN16CLR_RT_HeapBlock14Compare_ValuesERKS_S1_b)
        * (.text._ZN22CLR_RT_ExecutionEngine10CastToTypeER16CLR_RT_HeapBlockjP15CLR_RT_Assemblyb)
        * (.text._ZNK16CLR_RT_HeapBlock6IsZeroEv)
        * (.text._ZN11CLR_RT_Time13GetMonthTableEt)
        * (.text._ZN22CLR_RT_BinaryFormatter8ReadBitsERji)
        * (.text._ZN18CLR_RT_HeapCluster13ExtractBlocksEjjj)
        * (.text._ZN35Library_corlib_native_System_String22CompareTo___I4__STRINGER17CLR_RT_StackFrame)
        * (.text._ZN18CLR_RT_HeapCluster13RecoverFromGCEv)
        * (.text._ZN14CLR_GFX_Bitmap6PatBltEiiiij)
        * (.text._ZN26CLR_RT_AttributeEnumerator7AdvanceEv)
        * (.text._ZN23CLR_RT_GarbageCollector41ComputeReachabilityGraphForMultipleBlocksEP16CLR_RT_HeapBlockj)
        * (.text._Z17Events_MaskedReadj)
        * (.text._ZN23CLR_RT_TypeDef_Instance14SwitchToParentEv)
        * (.text._ZN16CLR_RT_HeapBlock10NumericSubERKS_)
        * (.text._ZN11CLR_RT_Time21DaysAndFractionToTimeEjjRx)
        * (.text._ZN20CLR_RT_DblLinkedList24DblLinkedList_InitializeEv)
        * (.text._ZN16CLR_RT_HeapBlock10NumericAddERKS_)
        * (.text._ZN22CLR_RT_BinaryFormatter7AdvanceEv)
        * (.text._ZN16CLR_RT_HeapBlock12Relocate_ClsEv)
        * (.text._ZN14CLR_GFX_Bitmap13ClipToVisibleERiS0_S0_S0_PKS_S0_S0_)
    }>RELOC_RAM AT>LR_FLASH
    ER_RAM_RW  : ALIGN(0x10)
    {
        * (rwdata)
        * (.data*)
    }>RELOC_RAM AT>LR_FLASH
    ER_IFLASH  :
    {
        * (SectionForInternalFLASH)
        * (__aeabi*)
        * (.text.*crypto*)
        * (i.*crypto*)
        * (.text.*CLR*)
    }>LR_IFLASH AT>LR_IFLASH
    ER_FLASH_CONT  :
    {
        * (.text*)
        * (i.*)
        * (.rodata*)
        * (rodata)
        * (.constdata*)
        * (.conststring*)
        PROVIDE(_sbrk = .);
        PROVIDE(_write = .);
        PROVIDE(_close = .);
        PROVIDE(_fstat = .);
        PROVIDE(_lseek = .);
        PROVIDE(_read = .);
        PROVIDE(_exit = .);
        PROVIDE(_getpid = .);
        PROVIDE(_kill = .);
        PROVIDE(abort = .);
        PROVIDE(__errno = .);
        PROVIDE(_read = .);
        PROVIDE(isatty = .);
        PROVIDE(_isatty = .);
        LONG(0xE12FFF1E); 
    }>LR_FLASH
    .bss  : ALIGN(0x10)
    {
        * (.zidata*)
        * (.bss*)
        PROVIDE(__exidx_start = .); 
        PROVIDE(__exidx_end = .); 
    }>RELOC_RAM 
    /DISCARD/  :
    {
        * (.glue*)
        * (.vfp11*)
        * (.ARM.exidx*)
        * (.ARM.extab*)
    }
    ER_HEAP_BEGIN 0xA0300000 :
    {
        * (SectionForHeapBegin)
    }
    ER_HEAP_END 0xA03FFFF8 :
    {
        * (SectionForHeapEnd)
    }
    ER_CUSTOM_HEAP_BEGIN 0xA0400000 :
    {
        * (SectionForCustomHeapBegin)
    }
    ER_CUSTOM_HEAP_END 0xA047FFF8 :
    {
        * (SectionForCustomHeapEnd)
    }
    ER_STACK_BOTTOM 0xA0480000 :
    {
        * (SectionForStackBottom)
    }
    ER_STACK_TOP 0xA0500000 :
    {
        * (SectionForStackTop)
    }
    ER_CONFIG  :
    {
        * (SectionForConfig)
    }>LR_CONFIG
    ER_DAT  :
    {
        * (tinyclr_metadata)
    }>LR_DAT
}
Load$$ER_FLASH$$Base = ADDR(ER_FLASH);
Image$$ER_FLASH$$Length = SIZEOF(ER_FLASH);
Image$$ER_RAM_RO$$Base = ADDR(ER_RAM_RO);
Image$$ER_RAM_RO$$Length = SIZEOF(ER_RAM_RO);
Load$$ER_RAM_RO$$Base = LOADADDR(ER_RAM_RO);
Image$$ER_RAM_RW$$Base = ADDR(ER_RAM_RW);
Image$$ER_RAM_RW$$Length = SIZEOF(ER_RAM_RW);
Load$$ER_RAM_RW$$Base = LOADADDR(ER_RAM_RW);
Image$$ER_RAM_RW$$ZI$$Base = ADDR(.bss);
Image$$ER_RAM_RW$$ZI$$Length = SIZEOF(.bss);
__use_no_semihosting_swi = 0;
Image$$ER_IRAM$$Base = ADDR(ER_IRAM);
Image$$ER_IRAM$$Length = SIZEOF(ER_IRAM);
Load$$ER_IRAM$$Base = LOADADDR(ER_IRAM);
Image$$ER_IRAM_TC$$Base = ADDR(ER_IRAM_TC);
Image$$ER_IRAM_TC$$Length = SIZEOF(ER_IRAM_TC);
Load$$ER_IRAM_TC$$Base = LOADADDR(ER_IRAM_TC);
